name: "Build package manual"
description: "Build the manual of the GAP package"
inputs:
  use-latex:
    description: 'If true, then install and use latex'
    required: false
    default: true

runs:
  using: "composite"
  steps:
  
    - name: "Install TeX Live"
      shell: bash
      run: |
        set -ex
        
        if [ ${{ inputs.use-latex }} = "true" ]; then
          apt-get update
          apt-get install --no-install-recommends --yes texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
        fi
  
    - name: "Build package manual"
      shell: bash
      env:
        SOURCE_DATE_EPOCH: 0 # Prevent time stamps in generated PDF
      run: |
        set -ex
        
        # Add package to the custom GAP root
        ln -f -s $PWD /tmp/gaproot/pkg/
         
        # Add extra flags
        GAP='gap -A -c "QUIT;"'
        
        if [ -f "makedoc.g" ]; then
            $GAP makedoc.g
        elif [ -x "doc/make_doc" ]; then
            # If the package is called <pkg_name>, then the <doc/make_doc> script
            # most likely assumes that it has been called from the within the
            # <pkg_name>/doc folder, and that the directory hierarchy is
            # <gaproot>/pkg/<pkg_name>/doc/make_doc, and relies on this to access
            # several file.
            # So we create symlinks to some potentially-useful GAP directories.
            [ -d ../../doc ] && echo "../../doc exists" || ln -s $HOME/gap/doc ../../doc
            [ -d ../../etc ] && echo "../../etc exists" || ln -s $HOME/gap/etc ../../etc
            cd doc && ./make_doc
        else
            echo "no makedoc.g file or doc/make_doc script found!"
            exit 1
        fi
